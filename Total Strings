/* You are given a positive integer 'N'. Your task is to find the number of strings of length 'N' that can be formed using only the characters 'a', 'b' and 'c'. 
The strings formed should be such that the number of 'b' and 'c' in the string is at most 1 and 2, respectively.

Example:
Let’s say N = 2. The strings of length 2, which satisfy the given constraints are: “aa”, “ab”, “ac”, “ba”, “bc”, “ca”, “cb”, “cc”. Hence, the output is 8.

Approach:
Permutations and combinations mathematical approach
we can separate cases.
case 1: all single a (1)
case 2: all single b (n) (rest will be a and combinations will be n or nC1)
case 3: all single c (n same as above)
case 4: cc (rest will be a, so nC2 * 2!/2 (as 2 char so 2! permutations but same char so will be divided by frequency)
case 5: bc (nC2 * 2!)
case 6: bcc (rest will be a, same as case 4 and new b is allowed too. so (n-2) * nC2 ) or nC3 * 3!(permu) / 2! (as repetition)

#define X 1000000007
inline int countStrings(uint64_t n)
{
  uint64_t a=1, b=n, c=n;
  uint64_t bc = n*(n-1);
  uint64_t cc = bc/2;
  uint64_t bcc = (cc*(n-2))%X;
  return (a + b + c + bc + cc + bcc)%X;
}
 
 //T.C. : O(1)
 //S.C. : O(1)
