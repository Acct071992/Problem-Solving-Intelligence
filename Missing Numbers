/* Given array of distinct positive numbers, need to return list of all missing number in the range of elements of the array.Sample Input 1:
2
4
1 2 4 6
3
1 2 3
Sample Output 1:
3 5
[Blank]    
Explanation For Sample Output 1:
In test case 1, As only 3 and 5 are not in the array and both lie in the range of the array. Thus answer would be "3 5" i.e sorted order.

In test case 2, Since all the elements are present from 1 to 3, the empty list is returned as a answer.
Sample Input 2:
2
3
7 4 9
4
3 6 7 4
Sample Output 2:
3 5 6 8
5
Explanation For Sample Output 2:
In test case 1, As only 3, 5, 6 and 8 are not in the array and lie in the range of the array. Thus answer would be "3 5 6 8" i.e sorted order.

In test case 2, As only 5 is not in the array and lie in the range of the array. Thus answer would be "5".
*/

Approach:
find min and max elements from array to know the range. Then from min to max iterate and whoever are missing from input array, add to ans vector.

#include <bits/stdc++.h> 
vector<int> missingNumbers(vector<int> &arr, int n) {
    int minX = INT_MAX, maxX = 0;
    for(int &x : arr) minX = min(minX,x), maxX = max(maxX,x);
    unordered_set<int>ust(arr.begin(),arr.end());
    vector<int>ans;
    for(;minX<=maxX;++minX){
        if(ust.find(minX)==ust.end()) ans.push_back(minX);
    }
    return ans;
}

//T.C. : O(N)
//S.C. : O(N)
